// Code generated by tygo. DO NOT EDIT.

//////////
// source: book.go

export interface Book {
  id: number /* uint */;
  title: string;
  cover: string;
  description: string;
  path: string;
  pageCount: number /* uint */;
  pages: string[];
  images: (Image | undefined)[];
  number: number /* float32 */;
  type: string;
  seriesId: number /* uint */;
  series?: Series;
  author: (Person | undefined)[];
  artist: (Person | undefined)[];
  genre: (Genre | undefined)[];
  publisher: (Person | undefined)[];
}

//////////
// source: genre.go

export interface Genre {
  id: number /* uint */;
  name: string;
}

//////////
// source: image.go

export interface Image {
  fileName: string;
  width: number /* int */;
  height: number /* int */;
  pageNumber: number /* uint */;
}

//////////
// source: library.go

export interface Library {
  id: number /* uint */;
  name: string;
  path: string;
  type: string;
}
export const Comic = "comic";
export const Novel = "novel";

//////////
// source: person.go

export interface Person {
  id: number /* int */;
  name: string;
  cover: string;
  description: string;
}

//////////
// source: progress.go

export interface Progress {
  id: number /* uint */;
  userId: number /* uint */;
  bookId: number /* uint */;
  seriesId: number /* uint */;
  page: number /* uint */;
  bookScroll: string;
  book?: Book;
  series?: Series;
  updatedAt: string /* RFC3339 */;
}

//////////
// source: series.go

export interface Series {
  id: number /* uint */;
  title: string;
  cover: string;
  description: string;
  dir: string;
  author: (Person | undefined)[];
  artist: (Person | undefined)[];
  genre: (Genre | undefined)[];
  publisher: (Person | undefined)[];
  libraryId: number /* uint */;
  library?: Library;
  createdAt?: string /* RFC3339 */;
  updatedAt?: string /* RFC3339 */;
}

//////////
// source: task.go

export type TaskStatus = string;
export const TaskPending: TaskStatus = "pending";
export const TaskRunning: TaskStatus = "running";
export const TaskPaused: TaskStatus = "paused";
export const TaskCompleted: TaskStatus = "completed";
export const TaskFailed: TaskStatus = "failed";
export interface Task {
  id: string;
  name: string;
  status: TaskStatus;
  progress: number /* int */;
  result: string;
  error: string;
  createdAt: string /* RFC3339 */;
  updatedAt: string /* RFC3339 */;
}

//////////
// source: user.go

export interface User {
  id: number /* uint */;
  username: string;
  password: string;
  name: string;
  email: string;
  cover: string;
  role: string;
}
